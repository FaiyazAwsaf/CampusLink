# Generated by Django 5.2.5 on 2025-09-01 15:13

from django.db import migrations
import django.utils.timezone


def add_missing_columns(apps, schema_editor):
    """Add missing columns to storefront table if they don't exist"""
    with schema_editor.connection.cursor() as cursor:
        # Check and add missing columns one by one
        columns_to_add = [
            ("description", "ALTER TABLE entrepreneurs_hub_storefront ADD COLUMN description text NULL;"),
            ("established_date", "ALTER TABLE entrepreneurs_hub_storefront ADD COLUMN established_date date NULL;"),
            ("location", "ALTER TABLE entrepreneurs_hub_storefront ADD COLUMN location varchar(200) NULL;"),
            ("return_policy", "ALTER TABLE entrepreneurs_hub_storefront ADD COLUMN return_policy text NULL;"),
            ("shipping_info", "ALTER TABLE entrepreneurs_hub_storefront ADD COLUMN shipping_info text NULL;"),
            ("store_hours", "ALTER TABLE entrepreneurs_hub_storefront ADD COLUMN store_hours varchar(200) NULL;"),
            ("total_sales", "ALTER TABLE entrepreneurs_hub_storefront ADD COLUMN total_sales integer DEFAULT 0 NOT NULL;"),
            ("created_at", f"ALTER TABLE entrepreneurs_hub_storefront ADD COLUMN created_at timestamp with time zone DEFAULT '{django.utils.timezone.now().isoformat()}'::timestamptz NOT NULL;"),
        ]
        
        for column_name, sql in columns_to_add:
            try:
                # Check if column exists
                cursor.execute("""
                    SELECT column_name 
                    FROM information_schema.columns 
                    WHERE table_name='entrepreneurs_hub_storefront' 
                    AND column_name=%s;
                """, [column_name])
                
                if not cursor.fetchone():
                    # Column doesn't exist, add it
                    print(f"Adding missing column: {column_name}")
                    cursor.execute(sql)
                else:
                    print(f"Column {column_name} already exists, skipping")
            except Exception as e:
                print(f"Error adding column {column_name}: {e}")


def reverse_add_missing_columns(apps, schema_editor):
    """Remove the columns if needed"""
    pass  # We won't implement reverse since these columns should exist


class Migration(migrations.Migration):

    dependencies = [
        ('entrepreneurs_hub', '0007_owner_user'),
    ]

    operations = [
        migrations.RunPython(add_missing_columns, reverse_add_missing_columns),
    ]
