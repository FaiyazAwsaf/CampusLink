# Generated by Django 5.2.5 on 2025-08-18 17:45

from django.db import migrations, models


def change_staff_role_to_laundry_staff(apps, schema_editor):
    """
    Change all users with role 'staff' to 'laundry_staff'
    """
    User = apps.get_model('accounts', 'User')
    Group = apps.get_model('auth', 'Group')
    
    # Update users with staff role to laundry_staff
    User.objects.filter(role='staff').update(role='laundry_staff')
    
    # Update group name if it exists
    try:
        staff_group = Group.objects.get(name='Staff')
        staff_group.name = 'Laundry Staff'
        staff_group.save()
    except Group.DoesNotExist:
        pass


def reverse_change_staff_role_to_laundry_staff(apps, schema_editor):
    """
    Reverse migration: change 'laundry_staff' back to 'staff'
    """
    User = apps.get_model('accounts', 'User')
    Group = apps.get_model('auth', 'Group')
    
    # Revert users with laundry_staff role back to staff
    User.objects.filter(role='laundry_staff').update(role='staff')
    
    # Revert group name if it exists
    try:
        laundry_staff_group = Group.objects.get(name='Laundry Staff')
        laundry_staff_group.name = 'Staff'
        laundry_staff_group.save()
    except Group.DoesNotExist:
        pass


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0003_change_admin_role_to_cds_owner'),
    ]

    operations = [
        migrations.RunPython(
            change_staff_role_to_laundry_staff,
            reverse_change_staff_role_to_laundry_staff
        ),
        migrations.AlterField(
            model_name='user',
            name='role',
            field=models.CharField(
                choices=[
                    ('cds_owner', 'CDS Owner'),
                    ('laundry_staff', 'Laundry Staff'),
                    ('student', 'Student'),
                    ('entrepreneur', 'Entrepreneur')
                ],
                default='student',
                max_length=20
            ),
        ),
    ]
